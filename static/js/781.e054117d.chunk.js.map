{"version":3,"file":"static/js/781.e054117d.chunk.js","mappings":"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","sources":["api/index.js","components/Form/customField.js","components/Form/RadioGroup.js","webpack://client/./src/components/Form/Form.module.sass?b9fc","schemes/index.js","components/Form/index.js","constants.js"],"sourcesContent":["export const postUser = (formData, token) => {\r\n  return fetch('https://frontend-test-assignment-api.abz.agency/api/v1/users', {\r\n    method: 'POST',\r\n    body: formData,\r\n    headers: { Token: token }\r\n  }).then(response => response.json())\r\n}\r\n\r\nexport const getToken = () =>\r\n  fetch('https://frontend-test-assignment-api.abz.agency/api/v1/token').then(\r\n    response => response.json()\r\n  )\r\n\r\nexport const getPositions = () =>\r\n  fetch(\r\n    'https://frontend-test-assignment-api.abz.agency/api/v1/positions'\r\n  ).then(data => data.json())\r\n\r\nexport const getUsers = page =>\r\n  fetch(\r\n    `https://frontend-test-assignment-api.abz.agency/api/v1/users?page=${page}&count=6`\r\n  ).then(response => response.json())\r\n","import React, { useState } from 'react'\r\nimport { Field } from 'formik'\r\nimport cx from 'classnames'\r\nconst CustomField = props => {\r\n  const { name, id, checked, value, className } = props\r\n  const [fileName, setFileName] = useState(value)\r\n  const handleFileUpload = (event, form) => {\r\n    const file = event.target.files[0]\r\n    form.setFieldValue('file', file, true)\r\n    form.setTouched({ ...form.touched, file: true }, false)\r\n    if (file) {\r\n      setFileName(file.name)\r\n    }\r\n  }\r\n  const formatPhoneNumber = phoneNumber => {\r\n    const number = phoneNumber.trim().replace(/[^+0-9]/g, '')\r\n    const isPlus = number.includes('+')\r\n    if (number.length < 4) return number\r\n    if (number.length < 6 || (number.length <= 6 && isPlus))\r\n      return number.replace(/(\\+?\\d{2})(\\d{3})/, '$1 ($2)')\r\n    if (number.length < 9 || (number.length <= 9 && isPlus))\r\n      return number.replace(/(\\+?\\d{2})(\\d{3})(\\d{1,3})/, '$1 ($2) $3')\r\n    if (number.length < 12 || (number.length <= 12 && isPlus))\r\n      return number.replace(\r\n        /(\\+?\\d{2})(\\d{3})(\\d{1,3})(\\d{1,2})/,\r\n        '$1 ($2) $3-$4'\r\n      )\r\n    return number.replace(\r\n      /(\\+?\\d{2})(\\d{3})(\\d{3})(\\d{2})(\\d{2})/,\r\n      '$1 ($2) $3-$4-$5'\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Field name={name}>\r\n      {({ field, form, meta }) => {\r\n        return (\r\n          <>\r\n            {name === 'position' ? (\r\n              <>\r\n                <label htmlFor={id}>\r\n                  <input\r\n                    {...field}\r\n                    type='radio'\r\n                    id={id}\r\n                    value={value}\r\n                    checked={checked}\r\n                  />\r\n                  <span></span>\r\n                  <p>{value}</p>\r\n                  {meta.error}\r\n                </label>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {name === 'file' ? (\r\n                  <>\r\n                    <div\r\n                      className={cx(className[0], {\r\n                        [className[1]]: meta.error && meta.touched\r\n                      })}\r\n                    >\r\n                      <input\r\n                        {...field}\r\n                        value=''\r\n                        type='file'\r\n                        id={id}\r\n                        onChange={event =>\r\n                          handleFileUpload(event, form)\r\n                        }\r\n                      />\r\n                      <label htmlFor={id}>Upload</label>\r\n                      <label htmlFor={id} className='fileName'>\r\n                        {fileName || 'Upload your file'}\r\n                      </label>\r\n                      <span>\r\n                        {meta.error && meta.touched ? meta.error : null}\r\n                      </span>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div\r\n                      className={cx({\r\n                        [className]: meta.error && meta.touched\r\n                      })}\r\n                    >\r\n                      {name === 'phone' ? (\r\n                        <>\r\n                          <input\r\n                            type='text'\r\n                            id={id}\r\n                            required='required'\r\n                            onChange={e => {\r\n                              const number = formatPhoneNumber(e.target.value)\r\n                              form.handleChange(e)\r\n                              form.setFieldValue('phone', number)\r\n                            }}\r\n                            onBlur={form.handleBlur}\r\n                            value={form.values.phone}\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <input\r\n                          {...field}\r\n                          type='text'\r\n                          id={id}\r\n                          required='required'\r\n                        />\r\n                      )}\r\n\r\n                      <label htmlFor={id}>{name}</label>\r\n                      <span>\r\n                        {meta.error && meta.touched\r\n                          ? meta.error\r\n                          : name === 'phone' && '+38 (XXX) XXX - XX - XX'}\r\n                      </span>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </>\r\n        )\r\n      }}\r\n    </Field>\r\n  )\r\n}\r\nexport default CustomField\r\n","import React from 'react'\r\nimport { Field } from 'formik'\r\nimport CustomField from './customField'\r\nconst RadioGroup = props => {\r\n  const { classNames, positions } = props\r\n  return (\r\n    <Field>\r\n      {({ field, from, meta }) => {\r\n        return (\r\n          <div className={classNames}>\r\n            <p>Select your position</p>\r\n            {positions !== null && positions !== undefined &&\r\n              positions.map(position => (\r\n                <CustomField\r\n                  key={position.id}\r\n                  name='position'\r\n                  id={position.id}\r\n                  value={position.name}\r\n                  checked={field.value.position === position.name}\r\n                />\r\n              ))}\r\n          </div>\r\n        )\r\n      }}\r\n    </Field>\r\n  )\r\n}\r\n\r\nexport default RadioGroup\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postReq\":\"Form_postReq__pSfjI\",\"form\":\"Form_form__v9fIP\",\"error\":\"Form_error__DIIPw\",\"radio\":\"Form_radio__ZxIEn\",\"photo\":\"Form_photo__wx4xC\",\"disabled\":\"Form_disabled__pUd9g\"};","import * as Yup from 'yup'\r\n\r\nconst FILE_SIZE = 160 * 1024\r\n\r\nconst SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg']\r\n\r\nconst postScheme = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(4, 'Name should be at least 4 characters')\r\n    .required('Name required'),\r\n  email: Yup.string()\r\n    .matches(\r\n      //eslint-disable-next-line\r\n      /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/,\r\n      'Invalid email'\r\n    )\r\n    .email('Invalid email')\r\n    .required('Email required'),\r\n  phone: Yup.string()\r\n    .matches(\r\n      /^\\+?38\\s(\\(0\\d{2}\\)[\\s-]\\d{3}[\\s-]\\d{2}[\\s-]\\d{2})$/,\r\n      \"Number must match '+380XXXXXXXXX'\"\r\n    )\r\n    .required('Phone number required'),\r\n  position: Yup.string()\r\n    .matches(/(Lawyer|Content manager|Security|Designer)/)\r\n    .required('Role required'),\r\n  file: Yup.mixed()\r\n    .required('File is required')\r\n    .test(\r\n      'fileSize',\r\n      'File too large',\r\n      value => value && value.size <= FILE_SIZE\r\n    )\r\n    .test(\r\n      'fileFormat',\r\n      'Unsupported Format',\r\n      value => value && SUPPORTED_FORMATS.includes(value.type)\r\n    )\r\n})\r\n\r\nexport default postScheme\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Formik, Form } from 'formik'\r\nimport cx from 'classnames'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport CustomField from './customField'\r\nimport RadioGroup from './RadioGroup'\r\nimport styles from './Form.module.sass'\r\nimport postScheme from '../../schemes'\r\nimport { getPositions, getToken, getUsers, postUser } from '../../api'\r\nimport { getUsersList, getPositionsList, updateList, getAccessToken } from '../../store/slices/usersSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CONSTANTS from '../../constants'\r\nconst initialValues = {\r\n  name: '',\r\n  email: '',\r\n  phone: '',\r\n  position: 'Lawyer',\r\n  file: ''\r\n}\r\nconst PostForm = () => {\r\n  const dispatch = useDispatch()\r\n  const { currentPage, positions, token } = useSelector(state => state.users)\r\n  const [isSent, setIsSent] = useState(false)\r\n  const handleSubmit = (values, formikBag) => {\r\n    const formData = new FormData()\r\n    const [position] = positions.filter(\r\n      position => position.name === values.position && position.id\r\n    )\r\n    const validNumber = '+' + values.phone.replace(/\\D/g, '')\r\n    formData.append('position_id', position.id)\r\n    formData.append('name', values.name)\r\n    formData.append('email', values.email)\r\n    formData.append('phone', validNumber)\r\n    formData.append('photo', values.file)\r\n    postUser(formData, token).then(data => {\r\n      if (data.success) {\r\n        setIsSent(true)\r\n        dispatch(updateList())\r\n        getUsers(currentPage).then(data => {\r\n          dispatch(getUsersList(data))\r\n        })\r\n        formikBag.resetForm()\r\n      } else {\r\n        toast(data.message)\r\n        const submitBtn = document.getElementById('submit')\r\n        submitBtn.classList.add(styles.disabled)\r\n        setTimeout(() => {\r\n          submitBtn.classList.remove(styles.disabled)\r\n        }, 2000)\r\n      }\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    getPositions().then(data => dispatch(getPositionsList(data)))\r\n    getToken().then(data => dispatch(getAccessToken(data)))\r\n  }, [dispatch])\r\n  return (\r\n    <section className={styles.postReq} id='registration'>\r\n      <ToastContainer\r\n        position='top-center'\r\n        autoClose={1000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        role='error'\r\n        pauseOnFocusLoss={false}\r\n        pauseOnHover={false}\r\n        draggable\r\n        limit={1}\r\n        style={{ top: '2rem' }}\r\n        progressStyle={{ background: 'red' }}\r\n      />\r\n      <h2>Working with POST request</h2>\r\n      {isSent ? (\r\n        <div>\r\n          <img src={`${CONSTANTS.PUBLIC_URL}/success-image.svg`} alt='success' />\r\n        </div>\r\n      ) : (\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={handleSubmit}\r\n          validationSchema={postScheme}\r\n          validateOnMount={true}\r\n        >\r\n          {formikProps => {\r\n            return (\r\n              <Form className={styles.form}>\r\n                <CustomField id='name' name='name' className={styles.error} />\r\n                <CustomField id='email' name='email' className={styles.error} />\r\n                <CustomField id='phone' name='phone' className={styles.error} />\r\n                <RadioGroup classNames={styles.radio} positions={positions} />\r\n                <CustomField\r\n                  id='file'\r\n                  name='file'\r\n                  className={[styles.photo, styles.error]}\r\n                />\r\n                <input\r\n                  type='submit'\r\n                  value='Sign up'\r\n                  id='submit'\r\n                  className={cx({ [styles.disabled]: !formikProps.isValid })}\r\n                />\r\n              </Form>\r\n            )\r\n          }}\r\n        </Formik>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PostForm\r\n","const CONSTANTS = {\r\n  PUBLIC_URL:\r\n    'https://Om-Oleksandr.github.io/test-task-abz-agency/assets/images'\r\n}\r\n\r\nexport default CONSTANTS\r\n"],"names":["postUser","formData","token","fetch","method","body","headers","Token","then","response","json","getToken","getPositions","data","getUsers","page","concat","props","name","id","checked","value","className","fileName","setFileName","useState","_jsx","Field","children","_ref","field","form","meta","_Fragment","_jsxs","htmlFor","type","error","cx","touched","onChange","event","handleFileUpload","file","target","files","setFieldValue","setTouched","required","e","number","phoneNumber","trim","replace","isPlus","includes","length","formatPhoneNumber","handleChange","onBlur","handleBlur","values","phone","classNames","positions","from","undefined","map","position","CustomField","SUPPORTED_FORMATS","Yup","shape","min","email","matches","test","size","initialValues","PostForm","dispatch","useDispatch","currentPage","useSelector","state","users","isSent","setIsSent","useEffect","getPositionsList","getAccessToken","styles","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","role","pauseOnFocusLoss","pauseOnHover","draggable","limit","style","top","progressStyle","background","src","CONSTANTS","PUBLIC_URL","alt","Formik","onSubmit","handleSubmit","formikBag","FormData","filter","validNumber","append","success","updateList","getUsersList","resetForm","toast","message","submitBtn","document","getElementById","classList","add","setTimeout","remove","validationSchema","postScheme","validateOnMount","formikProps","Form","RadioGroup","isValid"],"sourceRoot":""}